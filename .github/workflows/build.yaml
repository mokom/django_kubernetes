name: Build Docker Container & Push to Digital Ocean Registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    
jobs:
  test_django_job:
    uses: mokom/django_kubernetes/.github/workflows/test-django.yaml@master
  docker_build_job:
    runs-on: ubuntu-latest
    needs: [test_django_job]
    env:
      CLUSTER_NAME: django-k8s-cluster
      KUBERNETES_CONTAINER_NAME: django-k8s-app-deployment
      KUBERNETES_CONTAINER_IMAGE: registry.digitalocean.com/django-k8s-registry/django-k8s-app
      KUBERNETES_DEPLOYMENT_NAME: django-k8s-app-deployment
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Digital Ocean ctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITAL_OCEAN_API_TOKEN_KEY }}
    - name: Login to Digital Ocean Container Registry with short lived creds
      run: doctl registry login --expiry-seconds 1200
    - name: Build container image
      working-directory: ./app
      run: |
        docker build -f Dockerfile \
          -t ${{ env.KUBERNETES_CONTAINER_IMAGE }}:latest \
          -t ${{ env.KUBERNETES_CONTAINER_IMAGE }}:${GITHUB_SHA::7}-${GITHUB_RUN_ID::5} \
          .
        
    - name: Push image
      run: |
        docker push ${{ env.KUBERNETES_CONTAINER_IMAGE }} --all-tags
    - name: Kubernetes cluster kubeconfig file with short-lived creds
      run: |
        doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER_NAME }}
    - name: Update Deployment Secrets
      run: |
        cat << EOF >> app/.env.prod

        DEBUG=1
        DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
        DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
        DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
        DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}

        ENV_ALLOWED_HOST=${{ secrets.ENV_ALLOWED_HOST }}


        POSTGRES_READY=0
        POSTGRES_DB=${{ secrets.POSTGRES_DB }}
        POSTGRES_USER=${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}

        AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

        EOF
        kubectl delete secret django-k8s-app-prod-env
        kubectl create secret generic django-k8s-app-prod-env --from-env-file=app/.env.prod
    - name: Update Deployment Image 
      run: |
        kubectl set image deployment/${{ env.KUBERNETES_DEPLOYMENT_NAME }} ${{ env.KUBERNETES_CONTAINER_NAME }}=${{ env.KUBERNETES_CONTAINER_IMAGE }}:${GITHUB_SHA::7}-${GITHUB_RUN_ID::5}
    - name: Wait for rollout to finish
      run: |
        kubectl rollout status deployment/django-k8s-app-deployment
    - name: Post-Build Django Commands - Migrate & Collectstatic
      run: |
        export SINGLE_POD_NAME=$(kubectl get pod -l app=django-k8s-app-deployment -o jsonpath="{.items[0].metadata.name}")
        kubectl exec -it $SINGLE_POD_NAME -- bash /app/migrate.sh
        kubectl exec -it $SINGLE_POD_NAME -- bash /app/collectstatic.sh